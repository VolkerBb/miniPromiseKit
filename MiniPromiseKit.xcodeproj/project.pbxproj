// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		_LinkFileRef_MiniPromiseKit_via_MiniPromiseKitTests /* MiniPromiseKit.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "_____Product_MiniPromiseKit" /* MiniPromiseKit.framework */; };
		__src_cc_ref_Sources/Apply.swift /* Apply.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Apply.swift /* Apply.swift */; };
		__src_cc_ref_Sources/MiniPromiseKit.swift /* MiniPromiseKit.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/MiniPromiseKit.swift /* MiniPromiseKit.swift */; };
		__src_cc_ref_Sources/Result.swift /* MiniResult.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Result.swift /* MiniResult.swift */; };
		__src_cc_ref_Tests/MiniPromiseKitTests/MiniPromiseKitTests.swift /* MiniPromiseKitTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Tests/MiniPromiseKitTests/MiniPromiseKitTests.swift /* MiniPromiseKitTests.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		BC7EF5AB1D875A38001F2325 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = __RootObject_ /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "______Target_MiniPromiseKit";
			remoteInfo = MiniPromiseKit;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		__PBXFileRef_MiniPromiseKit.xcodeproj/Configs/Project.xcconfig /* MiniPromiseKit.xcodeproj/Configs/Project.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = MiniPromiseKit.xcodeproj/Configs/Project.xcconfig; sourceTree = "<group>"; };
		__PBXFileRef_Package.swift /* Package.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Apply.swift /* Apply.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Apply.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/MiniPromiseKit.swift /* MiniPromiseKit.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MiniPromiseKit.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Result.swift /* MiniResult.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MiniResult.swift; sourceTree = "<group>"; };
		__PBXFileRef_Tests/MiniPromiseKitTests/MiniPromiseKitTests.swift /* MiniPromiseKitTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = MiniPromiseKitTests.swift; sourceTree = "<group>"; };
		"_____Product_MiniPromiseKit" /* MiniPromiseKit.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = MiniPromiseKit.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"_____Product_MiniPromiseKitTests" /* MiniPromiseKitTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = MiniPromiseKitTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		"___LinkPhase_MiniPromiseKit" /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		"___LinkPhase_MiniPromiseKitTests" /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				_LinkFileRef_MiniPromiseKit_via_MiniPromiseKitTests /* MiniPromiseKit.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		TestProducts_ /* Tests */ = {
			isa = PBXGroup;
			children = (
				"_____Product_MiniPromiseKitTests" /* MiniPromiseKitTests.xctest */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
		"___RootGroup_" = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Package.swift /* Package.swift */,
				"_____Configs_" /* Configs */,
				"_____Sources_" /* Sources */,
				"_______Tests_" /* Tests */,
				"____Products_" /* Products */,
			);
			sourceTree = "<group>";
		};
		"____Products_" /* Products */ = {
			isa = PBXGroup;
			children = (
				TestProducts_ /* Tests */,
				"_____Product_MiniPromiseKit" /* MiniPromiseKit.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		"_____Configs_" /* Configs */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_MiniPromiseKit.xcodeproj/Configs/Project.xcconfig /* MiniPromiseKit.xcodeproj/Configs/Project.xcconfig */,
			);
			name = Configs;
			sourceTree = "<group>";
		};
		"_____Sources_" /* Sources */ = {
			isa = PBXGroup;
			children = (
				"_______Group_MiniPromiseKit" /* MiniPromiseKit */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		"_______Group_MiniPromiseKit" /* MiniPromiseKit */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Sources/Apply.swift /* Apply.swift */,
				__PBXFileRef_Sources/MiniPromiseKit.swift /* MiniPromiseKit.swift */,
				__PBXFileRef_Sources/Result.swift /* MiniResult.swift */,
			);
			name = MiniPromiseKit;
			path = Sources;
			sourceTree = "<group>";
		};
		"_______Group_MiniPromiseKitTests" /* MiniPromiseKitTests */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Tests/MiniPromiseKitTests/MiniPromiseKitTests.swift /* MiniPromiseKitTests.swift */,
			);
			name = MiniPromiseKitTests;
			path = Tests/MiniPromiseKitTests;
			sourceTree = "<group>";
		};
		"_______Tests_" /* Tests */ = {
			isa = PBXGroup;
			children = (
				"_______Group_MiniPromiseKitTests" /* MiniPromiseKitTests */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"______Target_MiniPromiseKit" /* MiniPromiseKit */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = "_______Confs_MiniPromiseKit" /* Build configuration list for PBXNativeTarget "MiniPromiseKit" */;
			buildPhases = (
				CompilePhase_MiniPromiseKit /* Sources */,
				"___LinkPhase_MiniPromiseKit" /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = MiniPromiseKit;
			productName = MiniPromiseKit;
			productReference = "_____Product_MiniPromiseKit" /* MiniPromiseKit.framework */;
			productType = "com.apple.product-type.framework";
		};
		"______Target_MiniPromiseKitTests" /* MiniPromiseKitTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = "_______Confs_MiniPromiseKitTests" /* Build configuration list for PBXNativeTarget "MiniPromiseKitTests" */;
			buildPhases = (
				CompilePhase_MiniPromiseKitTests /* Sources */,
				"___LinkPhase_MiniPromiseKitTests" /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				__Dependency_MiniPromiseKit /* PBXTargetDependency */,
			);
			name = MiniPromiseKitTests;
			productName = MiniPromiseKitTests;
			productReference = "_____Product_MiniPromiseKitTests" /* MiniPromiseKitTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		__RootObject_ /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = "___RootConfs_" /* Build configuration list for PBXProject "MiniPromiseKit" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = "___RootGroup_";
			productRefGroup = "____Products_" /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"______Target_MiniPromiseKit" /* MiniPromiseKit */,
				"______Target_MiniPromiseKitTests" /* MiniPromiseKitTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		CompilePhase_MiniPromiseKit /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				__src_cc_ref_Sources/Apply.swift /* Apply.swift in Sources */,
				__src_cc_ref_Sources/MiniPromiseKit.swift /* MiniPromiseKit.swift in Sources */,
				__src_cc_ref_Sources/Result.swift /* MiniResult.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CompilePhase_MiniPromiseKitTests /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				__src_cc_ref_Tests/MiniPromiseKitTests/MiniPromiseKitTests.swift /* MiniPromiseKitTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		__Dependency_MiniPromiseKit /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "______Target_MiniPromiseKit" /* MiniPromiseKit */;
			targetProxy = BC7EF5AB1D875A38001F2325 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		_ReleaseConf_MiniPromiseKit /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				INFOPLIST_FILE = MiniPromiseKit.xcodeproj/MiniPromiseKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = MiniPromiseKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		_ReleaseConf_MiniPromiseKitTests /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				INFOPLIST_FILE = MiniPromiseKit.xcodeproj/MiniPromiseKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		"___DebugConf_MiniPromiseKit" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				INFOPLIST_FILE = MiniPromiseKit.xcodeproj/MiniPromiseKit_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = MiniPromiseKit;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		"___DebugConf_MiniPromiseKitTests" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				INFOPLIST_FILE = MiniPromiseKit.xcodeproj/MiniPromiseKitTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		"_____Release_" /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = __PBXFileRef_MiniPromiseKit.xcodeproj/Configs/Project.xcconfig /* MiniPromiseKit.xcodeproj/Configs/Project.xcconfig */;
			buildSettings = {
			};
			name = Release;
		};
		"_______Debug_" /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = __PBXFileRef_MiniPromiseKit.xcodeproj/Configs/Project.xcconfig /* MiniPromiseKit.xcodeproj/Configs/Project.xcconfig */;
			buildSettings = {
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		"___RootConfs_" /* Build configuration list for PBXProject "MiniPromiseKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"_______Debug_" /* Debug */,
				"_____Release_" /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"_______Confs_MiniPromiseKit" /* Build configuration list for PBXNativeTarget "MiniPromiseKit" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"___DebugConf_MiniPromiseKit" /* Debug */,
				_ReleaseConf_MiniPromiseKit /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"_______Confs_MiniPromiseKitTests" /* Build configuration list for PBXNativeTarget "MiniPromiseKitTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"___DebugConf_MiniPromiseKitTests" /* Debug */,
				_ReleaseConf_MiniPromiseKitTests /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = __RootObject_ /* Project object */;
}
